var x=Object.defineProperty;var L=(a,t,i)=>t in a?x(a,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[t]=i;var d=(a,t,i)=>L(a,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const p of r.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&o(p)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();let l="/",g=[];const F="1.0.0",_=new Date().getTime(),y={},w=Math.floor(Math.random()*100)+1;let v=0;const s={"/":["about.txt","projects","contact.txt"],"/projects":["portfolio.ts","terminal-portfolio.ts","stackdew-valley.js"],"/secret":["hidden.txt"]},$={about:{description:"show a short bio."},alias:{description:"create or show command aliases.",usage:["alias [name] [command]"]},cat:{description:"display the contents of a file.",usage:["cat [file]"]},cd:{description:"change to a different directory.",usage:["cd [folder]","cd .."]},clear:{description:"clear the terminal screen."},contact:{description:"display email and GitHub link."},date:{description:"show the current date and time."},echo:{description:"echo a message to the terminal.",usage:["echo [message]"]},guess:{description:"play a guess-the-number game."},greet:{description:"personalized greeting."},help:{description:"display all available commands."},history:{description:"show the command history."},ls:{description:"list files and folders in the current directory.",usage:["ls","ls -l"]},mkdir:{description:"create a new directory.",usage:["mkdir [directory]"]},mv:{description:"rename a file.",usage:["mv [old_name] [new_name]"]},open:{description:"open an external site.",usage:["open github","open portfolio","open terminal-portfolio","open stackdew-valley"]},ping:{description:"ping a remote server.",usage:["ping [host]"]},projects:{description:"list featured personal projects."},reboot:{description:"reboot the system."},reload:{description:"reload the terminal window."},rm:{description:"remove a file.",usage:["rm [file]"]},shutdown:{description:"shut down the system."},skills:{description:"list programming languages and tools.",usage:["languages","tools"]},sudo:{description:"try it and see."},uptime:{description:"show the system uptime."},version:{description:"show the current terminal version."},whoami:{description:"display a fun user identity message."}},T={"portfolio.ts":{title:"portfolio (unfinished)",description:"a basic portfolio - built with typescript",link:"https://github.com/notyourimaginarycoder/portfolio"},"terminal-portfolio.ts":{title:"terminal-portfolio",description:"a terminal styled portfolio - built with typescript",link:"https://github.com/notyourimaginarycoder/terminal-portfolio"},"stackdew-valley.js":{title:"stackdew-valley",description:"a 2d farming simulator with a twist - built with phaser",link:"https://github.com/notyourimaginarycoder/stackdew-valley"}},C=a=>{var r,p,b;const t=a.trim().toLowerCase(),[i,...o]=t.split(" "),e=o.join(" ");if(g.push(t),g.length>50&&g.shift(),o.includes("--help")||o.includes("-h")){const u=$[i];if(u){let h=`'${i}' — ${u.description}`;return u.usage&&(h+=`
Usage:
  ${u.usage.join(`
  `)}`),h}return`'${i}' is not a recognized command`}switch(i){case"about":return"i am the imaginary friend we all used to have at some point";case"alias":return o.length===2?(y[o[0]]=o[1],`alias '${o[0]}' created for command '${o[1]}'.`):Object.keys(y).map(n=>`${n}: ${y[n]}`).join(`
`);case"cat":return e==="about.txt"?"this is my terminal-based portfolio - created with css, html, typescript":e==="contact.txt"?"contact me via github":e==="hidden.txt"?"nice! you found my hidden text file":"file not found";case"cd":const u=`/${e}`;return s[u]?(l=u,`changed directory to ${l}`):"directory not found";case"clear":return"__clear__";case"contact":return"github: https://github.com/notyourimaginarycoder";case"date":return new Date().toString().toLowerCase();case"echo":return e||"no message to echo";case"guess":if(o.length===1){const n=parseInt(o[0]);return v++,n===w?`you guessed it! the number was ${w}. attempts: ${v}`:n<w?"too low! try again":"too high! try again"}return"guess a number between 1 and 100.";case"greet":const h=new Date().getHours();return`${h<12?"good morning":h<18?"good afternoon":"good evening"}, welcome to the terminal!`;case"help":return`available commands (use --help or -h for more details):
`+Object.keys($).sort().map(n=>`  - ${n}`).join(`
`);case"history":return g.join(`
`);case"ls":return((r=s[l])==null?void 0:r.join("  "))||"directory is empty";case"mkdir":if(e){const n=`/${e}`;return s[n]?`directory '${e}' already exists`:(s[n]=[],`directory '${e}' created`)}return"please provide a directory name";case"mv":if(o.length===2&&((p=s[l])!=null&&p.includes(o[0]))){const n=o[0],m=o[1];return s[l]=s[l].map(c=>c===n?m:c),`renamed '${n}' to '${m}'`}return"invalid arguments or file not found";case"open":return e==="github"?(window.open("https://github.com/notyourimaginarycoder","_blank"),"opening github..."):e==="portfolio"?(window.open("https://github.com/notyourimaginarycoder/portfolio","_blank"),"opening source code for portfolio..."):e==="terminal-portfolio"?(window.open("https://github.com/notyourimaginarycoder/terminal-portfolio","_blank"),"opening source code for terminal-portfolio..."):e==="stackdew-valley"?(window.open("https://github.com/notyourimaginarycoder/stackdew-valley","_blank"),"opening source code for stackdew-valley..."):"unknown target - try open --help or -h";case"ping":return e?`Pinging ${e}... Response time: 50ms`:"Please provide a host to ping.";case"projects":const f=s["/projects"];return!f||f.length===0?"no projects found":f.map((n,m)=>{const c=T[n];return c?`${m+1}. ${c.title}
   ${c.description}${c.link?`
   → ${c.link}`:""}`:`${m+1}. ${n.replace(/\.(ts|js|py|txt)$/,"")}`}).join(`

`);case"reboot":return window.location.reload(),"rebooting system... terminal will reload shortly";case"reload":return window.location.reload(),"reloading terminal...";case"rm":return e&&((b=s[l])!=null&&b.includes(e))?(s[l]=s[l].filter(n=>n!==e),`file '${e}' removed`):`'${e}' not found in current directory`;case"shutdown":return window.close(),"shutting down system...";case"skills":return e==="languages"?`	├─ general purpose		: c#, java, javascript, python, typescript
        ├─ querying			: sql
        ├─ scripting			: autohotkey, bash
        ├─ systems programming		: assembly, c, c++
        └─ web development		: css, html`:e==="tools"?`	├─ databases			: firebase, mysql workbench, postgresql
        ├─ devops & cloud		: github actions, netlify, vercel
        ├─ frontend frameworks		: react, vite
        ├─ ides & editors		: visual studio, visual studio code
        ├─ testing			: jest, supertest
        └─ version control		: git, github`:"unknown target - try skills --help or -h";case"sudo":return"nice! but wrong terminal";case"uptime":const j=(new Date().getTime()-_)/1e3;return`system uptime: ${Math.floor(j)} seconds`;case"version":return`terminal version: ${F}`;case"whoami":return"visitor";default:return`'${t}' is not a recognized command. type 'help' to see available ones`}};class P{constructor(t){d(this,"container");d(this,"output");d(this,"inputLine");d(this,"inputField");d(this,"history",[]);d(this,"historyIndex",-1);this.container=t,this.output=document.createElement("div"),this.inputLine=document.createElement("div"),this.inputField=document.createElement("input")}isMobile(){return/Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent)}init(){this.container.classList.add("terminal"),this.output.id="output",this.inputField.id="command",this.inputField.autofocus=!0,this.inputField.spellcheck=!1,this.inputLine.className="input-line",this.inputLine.innerHTML='<span class="prompt">visitor@portfolio:~$</span>',this.inputLine.appendChild(this.inputField),this.container.appendChild(this.output),this.container.appendChild(this.inputLine),document.addEventListener("click",()=>{this.inputField.focus()}),this.inputField.addEventListener("blur",()=>{this.isMobile()||this.inputField.focus()}),this.inputField.addEventListener("keydown",t=>{if(t.key==="Enter"){const i=this.inputField.value.trim();i&&(this.history.push(i),this.historyIndex=this.history.length),this.executeCommand(i),this.inputField.value=""}else t.key==="ArrowUp"?this.historyIndex>0&&(this.historyIndex--,this.inputField.value=this.history[this.historyIndex]):t.key==="ArrowDown"&&(this.historyIndex<this.history.length-1?(this.historyIndex++,this.inputField.value=this.history[this.historyIndex]):this.inputField.value="")}),this.printLine("type 'help' to see available commands."),this.inputField.focus()}printLine(t){const i=document.createElement("div");i.textContent=t,this.output.appendChild(i),this.scrollToBottom()}async typeText(t){const i=document.createElement("div");this.output.appendChild(i);for(let o=0;o<t.length;o++)i.textContent+=t[o],await new Promise(e=>setTimeout(e,10));this.scrollToBottom()}executeCommand(t){if(!t)return;this.printLine(`visitor@portfolio:~$ ${t}`);const i=C(t);if(i==="__clear__"){this.output.innerHTML="";return}this.typeText(i)}scrollToBottom(){this.container.scrollTop=this.container.scrollHeight}}const k=document.getElementById("app");k&&new P(k).init();
